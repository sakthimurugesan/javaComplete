byte b; declaration
byte b=10; declaration and initilisation
and it also allocates memory size

literals

are constant values used in programs

int x=5*a+7*y;

5,7 are literals because wihout decimal

int price =25 // 25 is a literal
double d=235.975 // 235.975 is double literal

any value without decimal are double literal
any value with decimal are integer literal

why 4 data types are integral?
int has 4 bytes
why int has 4 bytes?

these day cpu has 64 bits
previous 32,16 bit

64 bit processor can process 64 bit in one cycle

when java has introduced 32 bit machines are there so int uses 4 bit
when c was introduced two types of machine 32 bit uses int has  bit 
16 bit mach has 2 bit


32 bit processor cannot process long data type whereas int can be done in single cycle
short,byte is used to save spaces another reason to give compatiable with old lang when 
java was introduced where int takes 2 bytes

signed and unsigned data types

flaot data types
method representation of float in IEEE754
float suppoorts uptop 6 -7 decimals

ascii has no negative
java has two bytes to support unicode in char data types

in java float can have modulos operator

swapping using bit operator

widening and narrowing
source and destination must be compatible

source data is larger than desti is called narrowing
condition
compatibility like int to flaodt but float cannot store int

widening is upcasting
widening is upcasting


printing
s.o.println() print and move to new line
s.o.print() print in the same line
s.o.printf() can be formatted like c c++
s.o.printformat()

S.o is static class above method belongs to s.o

s.o.print()


== checks holding same object in pool
equals() check the value

str1.comparesTO(str2) it will check which string comes first in dict

if -1 str1 comes first
if 1 str1 comes second
if 0 str1 and str2 are equals

str.concat() is used to concat 
str.valueof() is used to convert any types of number to string


regular expression is used to define a pattern and given string matches or not.

switch case is faster than if else ladder

loops
while
do-while
for
for each



dynamic method is usweful for achieve run time polymorphism using method overriding is same as run time polymorphism in c++






deviceinstaller64 install usbmmidd.inf usbmmidd


-Add virtual display:
deviceinstaller64 enableidd 1

-Remove virtual display:
deviceinstaller64 enableidd 0


-Uninstall:
deviceinstaller64 stop usbmmidd
deviceinstaller64 remove usbmmidd
